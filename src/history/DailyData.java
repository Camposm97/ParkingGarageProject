package history;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;

import model.*;
/**
 * DailyData contains two string array lists. The first list is a log of every transaction, and the
 * second list holds a log of the garage. 
 * @author chris demonte
 *
 */
import util.*;
public class DailyData implements Serializable{

	private static final long serialVersionUID = -2995963835008199289L;
	/**
	 *  totalSales is a double that keeps a total of the daily sales
	 *  salesLog is a list of strings representing transactions
	 *  garageLog is a record of the garage at certain times of the day
	 */
	private double totalSales;
	private ArrayList<String> salesLog;
	private ArrayList<String> garageLog;
	
	/**
	 * No parameter constructor that initializes the logs and makes the first entries. 
	 */
	public DailyData() {
		salesLog = new ArrayList<String>();
		garageLog = new ArrayList<String>();
		this.startLogs();
	}

	/**
	 * This method is called once when initializing the DailyData class. It starts out both logs with a first entry and 
	 * sets the total sales to 0.
	 */
	private void startLogs() {
		Date date = new Date();
		totalSales = 0.0;
		String openRegister = new String ("Register Opened: " + date.toString());
		salesLog.add(openRegister);
		String openParkingLot = new String ("Parking Lot Opened " + date.toString());
		garageLog.add(openParkingLot);
	}
	/**
	 * Adds a copy of a transaction receipt to the data logs.
	 * @param transaction is a string that is generated by the ticket class.
	 */
	public void logTransaction (String transaction) {
		salesLog.add(transaction);
	}
	/**
	 * Logs the status of the ParkingLot and enters each individual spot into the data logs
	 * @param lotData is the runtime instance of the parking lot in the main program
	 */
	public void logGarage(ParkingLot lotData) {
		Date date = new Date();
		garageLog.add(date.toString() + "\n" + lotData.toString());
	}

	/**
	 * Adds to the day's total sales
	 * @param sale is a double that comes from the ticket class
	 */
	public void addToSales(double sale) {
		this.totalSales += sale;
	}
	/**
	 * Overrides the Object toString method to output the data logs in a readable format
	 */
	@Override
	public String toString() {
		Date date = new Date();
		String output = new String();
		output += "Garage Log : " + date.toString() + "\n";
		output += "****************************************\n"
				+ "\tSales\n Total Sales : $" + this.totalSales
				+ "\n****************************************\n";
		for (int i = 0; i < salesLog.size(); i++) {
			output += salesLog.get(i);
		}
		output += "\n****************************************\n"
				+ "\tGarage\n"
				+ "****************************************\n";
		for (int i = 0; i < garageLog.size(); i++) {
			output += garageLog.get(i);
			output += "\n****************************************\n";
		}
	
		return output;
	}
	/**
	 * Saves the data to a file using the year, month, and day
	 */
	public void saveDailyData() {
		LocalDate date = LocalDate.now();
		String src = LightWork.emitDailyLog(date);
		DataSaver.writeObject(this, src);
	}
}
